@using TheVoid.ViewModels;
@model RegisterVM 

@{
    ViewData["Title"] = "Register";
}

<div class="d-flex justify-content-center align-items-center">
    <div class="card p-3 w-50 bg-dark border-white">
        <h2 class="text-center text-info text-white"> Register</h2>
        <form asp-action="Register" method="post">
            <div asp-validation-summary="ModelOnly" class="text-white"></div>
            <div class="mb-1">
                <label asp-for="Email" class="control-label text-white"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="mb-1">
                <label asp-for="Password" class="control-label text-white"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-1">
                <label asp-for="ConfirmPassword" class="control-label text-white"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="row">
                <div class="col-8">
                    <a asp-action="Login" class="text-decoration-none float-start mt-2"> Already have an account?'</a>
                </div>
                <div class="col-4">
                    <input type="submit" value="Register" class="btn btn-primary btn-sm float-end" />
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}